@use "../../app/styles/variables.scss" as *;

.heroImg {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: 1;
  filter: brightness(0.95) saturate(1.1);
}

.heroImageContainer {
  position: relative;
  width: 100vw;
  aspect-ratio: 21 / 9; // or 16 / 9 depending on your image
  overflow: hidden;

  @media (max-width: $mobile-breakpoint) {
    display: none;
  }
}

.heroImageContainer::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 2;

  background:
    linear-gradient(to top, rgba(0, 0, 0, 0.6), transparent 20%),
    linear-gradient(to bottom, rgba(0, 0, 0, 0.6), transparent 20%),
    linear-gradient(to left, rgba(0, 0, 0, 0.6), transparent 20%),
    linear-gradient(to right, rgba(0, 0, 0, 0.6), transparent 20%);
}

.hr {
  border-bottom: 14px solid $primary-color;
  width: 100%;
  margin-top: -5px;
  @media (max-width: $mobile-breakpoint) {
    display: none;
  }
}

.button {
  background-color: $primary-color;
  color: $background-color;
  height: 60px;
  padding: 5px 10px;
  font-weight: bold;
  text-transform: uppercase;
  font-size: 16px;
  border: 2px solid $foreground-color;
  border-radius: 4px;
  cursor: pointer;
  letter-spacing: 0.15rem;
  a {
    display: flex;
    justify-content: center;
    align-items: center;

    width: 100%;
    height: 100%;
    color: $background-color;
  }
}

.h3 {
  font-family: "Genty", sans-serif;
  font-size: 32px;
  font-weight: 100;
  letter-spacing: 0.1rem;
}

.center {
  display: flex;
  justify-content: flex-start;
  flex-direction: column;
  align-items: center;
  gap: 80px;
  color: black;
}

.row {
  display: flex;
  align-items: center;
  width: 100%;
}

.detailsContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
}

@media (min-width: $mobile-breakpoint) {
  .detailsContainer {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    gap: 40px;
    width: 100%;
  }
}

.row:first-of-type {
  margin-top: 60px; /* Apply margin-top to the first instance of .row */
}

.row > * {
  flex: 1;
}

.heading {
  text-align: center;
  font-size: 20px;
  font-weight: 500;
}

.details {
  text-align: center;
  width: 100%;
}

@media (min-width: $mobile-breakpoint) {
  .details {
    display: flex;
    justify-content: flex-start;
    flex-direction: column;
    align-items: center;
    gap: 10px;
    color: black;
    width: 33.3%;
  }
}

@media (prefers-color-scheme: dark) {
  .page {
    --gray-rgb: 255, 255, 255;
    --gray-alpha-200: rgba(var(--gray-rgb), 0.145);
    --gray-alpha-100: rgba(var(--gray-rgb), 0.06);

    --button-primary-hover: #ccc;
    --button-secondary-hover: #1a1a1a;
  }
}

.main {
  display: flex;
  flex-direction: column;
  gap: 32px;
  grid-row-start: 2;
}

.main ol {
  font-family: var(--font-geist-mono);
  padding-left: 0;
  margin: 0;
  font-size: 14px;
  line-height: 24px;
  letter-spacing: -0.01em;
  list-style-position: inside;
}

.main li:not(:last-of-type) {
  margin-bottom: 8px;
}

.main code {
  font-family: inherit;
  background: var(--gray-alpha-100);
  padding: 2px 4px;
  border-radius: 4px;
  font-weight: 600;
}

.ctas {
  display: flex;
  gap: 16px;
}

.ctas a {
  appearance: none;
  border-radius: 128px;
  height: 48px;
  padding: 0 20px;
  border: none;
  border: 1px solid transparent;
  transition: background 0.2s, color 0.2s, border-color 0.2s;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 16px;
  line-height: 20px;
  font-weight: 500;
}

a.primary {
  background: var(--foreground);
  color: var(--background);
  gap: 8px;
}

a.secondary {
  border-color: var(--gray-alpha-200);
  min-width: 180px;
}

.footer {
  grid-row-start: 3;
  display: flex;
  gap: 24px;
}

.footer a {
  display: flex;
  align-items: center;
  gap: 8px;
}

.footer img {
  flex-shrink: 0;
}

/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  a.primary:hover {
    background: var(--button-primary-hover);
    border-color: transparent;
  }

  a.secondary:hover {
    background: var(--button-secondary-hover);
    border-color: transparent;
  }

  .footer a:hover {
    text-decoration: underline;
    text-underline-offset: 4px;
  }
}

@media (max-width: $mobile-breakpoint) {
  .main {
    align-items: center;
  }

  .main ol {
    text-align: center;
  }

  .ctas {
    flex-direction: column;
  }

  .ctas a {
    font-size: 14px;
    height: 40px;
    padding: 0 16px;
  }

  a.secondary {
    min-width: auto;
  }

  .footer {
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
  }

  .row {
    flex-direction: column; /* Use single column layout on mobile */
    gap: 40px;
  }
}

@media (prefers-color-scheme: dark) {
  .logo {
    filter: invert($color: #000);
  }
}

.page h1 {
  margin-bottom: 0px;
}

.page main {
  position: relative;
  padding-bottom: 80px;
  @media (max-width: $mobile-breakpoint) {
    min-height: 100vh; /* Ensure the main section takes full height on mobile */
  }
}

.page main::before {
  content: '';
  position: absolute;
  inset: 0;
  opacity: 0.5;
  z-index: -1; /* Push the hero behind other content */
  background-image: url("/Wallpaper.png");
  background-size: 50vw 50vw; /* Smaller background image */
  background-repeat: repeat; /* Repeat the background image */
  @media (max-width: $mobile-breakpoint) {
    background-size: 500px 500px; /* Smaller background image */
  }
}

.textbox {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 60px;
}

.susieandjames {
  line-height: 72px;
  h1 {
    color: $foreground-color;
  }
  @media (min-width: $mobile-breakpoint) {
    div {
      display: inline-block;
      margin-left: 20px;
      margin-right: 20px;
    }
  }
}

.modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modalContent {
  background: white;
  padding: 20px;
  border-radius: 8px;
  text-align: center;
  position: fixed;
  width: 90%;
  @media (min-width: $mobile-breakpoint) {
    width: 600px;
  }
}

.closeButton {
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
  color: $foreground-color;
}

.modalLinks {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 40px;
  margin-top: 40px;
  margin-left: auto;
  margin-right: auto;
  width: 60%;
  margin-bottom: 20px;
}

.modalLinks a {
  text-decoration: none;
  font-weight: bold;
}

.textWithBackground {
  position: relative;
  width: 100%;
  height: auto;
  background-color: $background-color;
  color: $foreground-color;
  border-radius: 8px;
  box-shadow: 0 8px 16px $foreground-color;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 20px 40px;
}

@media (min-width: $mobile-breakpoint) {
  .textWithBackground {
    width: 50%;
  }
}

.verticalRuler {
  width: 4px;
  height: 100px;
  background-color: $foreground-color;
}

@media (max-width: $mobile-breakpoint) {
  .verticalRuler {
    width: 100px;
    height: 4px;
  }
}

@media (max-width: $mobile-breakpoint) {
  .hideOnMobile {
    display: none;
  }
}

@media (min-width: $mobile-breakpoint) {
  .hideOnDesktop {
    display: none;
  }
}
